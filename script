#!/bin/bash
# Copyright (C) 2019 Omar Castro <omar.castro.360@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#------------------------------------------------------------------------


# The first parameter sets the step to change the volume by, and units to display
# uses "step" env variable as fallback, which can be defined on the block configuration
# This may be in in % or dB (eg. 5% or 3dB), also, 
STEP="${1:-${step:-5%}}"
#------------------------------------------------------------------------


handle_buttons(){
  while read button; do
    case "$button" in
      1) ( cd "$( dirname "${BASH_SOURCE[0]}" )" > /dev/null 2>&1 && setsid ./mouse-left-click ) > /dev/null ;;
      3) ( cd "$( dirname "${BASH_SOURCE[0]}" )" > /dev/null 2>&1 && setsid ./mouse-right-click ) > /dev/null ;;
      4) ( cd "$( dirname "${BASH_SOURCE[0]}" )" > /dev/null 2>&1 && setsid ./mouse-wheel-up "$STEP" ) > /dev/null ;;
      5) ( cd "$( dirname "${BASH_SOURCE[0]}" )" > /dev/null 2>&1 && setsid ./mouse-wheel-down "$STEP" ) > /dev/null ;;
    esac
  done
}

tick(){
  # `pactl list sinks` shows sink properties with a mix of english language and local language
  # defined by LANG env var, so we unset the var to guarantee only one language is used, english
  SINK_LIST="$(unset LANG; pactl list sinks | sed -n '/^Sink/,/^\s*Active Port:/p')"
  DEFAULT_SINK=$(pacmd list-sinks | grep -m1 '* index:' | cut -b12-)
  DEFAULT_SINK_INFO="$(echo "$SINK_LIST" | sed -n "/^Sink #${DEFAULT_SINK}$/,/^\s*Active Port:/p")"


  volume() {
    echo "$DEFAULT_SINK_INFO" | grep '^[[:space:]]Volume:' |  head -n 1 | case $STEP in
      *dB )  sed -e 's|.* \(\-\?[0-9][0-9]*,[0-9][0-9]*\) dB.*|\1 dB|' -e 's|.* -inf dB.*|OFF|';;
      *%)    sed -e 's|.* \([0-9][0-9]*\)%.*|\1%|' -e 's|^0%|OFF|'  ;;
    esac
     
  }

  isMute(){
    echo "$DEFAULT_SINK_INFO" | grep -m1 '^[[:space:]]Mute:'  | sed -e 's,.*: \([a-z]*\).*,\1,' 
  }

  case "$(echo "$DEFAULT_SINK_INFO" | grep '^[[:space:]]Active Port:')" in
    *head* )  OFFICON="";  ONICON=""  ;;
    *hdmi* )  OFFICON="";  ONICON=""  ;;
    * )       OFFICON="";  ONICON=""  ;;
  esac

  #------------------------------------------------------------------------


  case "$(isMute)" in
    yes ) echo "$OFFICON MUTE" ;;
    * ) volume | awk '{print ($0 == "OFF") ? "'$OFFICON' "$0:"'$ONICON' "$0}0' ;;
  esac
}

printInfo(){
  THROTTLE_BY_SECONDS=0.05
  tick
  while read line ; do
    tick
    # throttle to reduce cpu when using pavucontrol slider or the mouse wheel on the block
    sleep $THROTTLE_BY_SECONDS
    # clear stdin, calling the tick command if there were content in stdin
    if read -t $THROTTLE_BY_SECONDS line; then while read -t $THROTTLE_BY_SECONDS line; do :; done; tick; fi
  done <  <(pactl subscribe | grep --line-buffered -E "sink|server")
}

printInfo &
handle_buttons